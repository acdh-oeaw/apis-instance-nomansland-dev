# Generated by Django 4.2.13 on 2024-05-31 22:08

import apis_core.generic.abc
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("apis_metainfo", "0012_remove_rootobject_deprecated_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="PlaceType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "Title",
                "verbose_name_plural": "Titles",
            },
            bases=(apis_core.generic.abc.GenericModel, models.Model),
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("orig_filename", models.CharField(blank=True, max_length=255)),
                ("indexed", models.BooleanField(default=False)),
                ("pubinfo", models.CharField(blank=True, max_length=400)),
                ("author", models.CharField(blank=True, max_length=255)),
                ("orig_id", models.PositiveIntegerField(blank=True, null=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            bases=(apis_core.generic.abc.GenericModel, models.Model),
        ),
        migrations.CreateModel(
            name="VersionPlace",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("label", models.CharField(blank=True, default="")),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.source",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("label", models.CharField(blank=True, default="")),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apis_ontology.source",
                    ),
                ),
            ],
            options={
                "verbose_name": "place",
                "verbose_name_plural": "Places",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
    ]
