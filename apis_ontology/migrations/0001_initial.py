# Generated by Django 4.2.13 on 2024-06-18 02:43

import apis_core.generic.abc
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("apis_metainfo", "0012_remove_rootobject_deprecated_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="EventType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "event type",
                "verbose_name_plural": "Event types",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="Expression",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("title", models.CharField(max_length=255)),
                ("locus", models.CharField(blank=True, max_length=255)),
                ("script_title", models.CharField(blank=True, max_length=255)),
                ("script_body", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "work",
                "verbose_name_plural": "Works",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.CreateModel(
            name="InstitutionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "institution type",
                "verbose_name_plural": "Institution types",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "language",
                "verbose_name_plural": "Languages",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="Manuscript",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("identifier", models.CharField(max_length=255)),
                ("extent", models.CharField(blank=True, max_length=255)),
                ("leaf_dimension", models.CharField(blank=True, max_length=255)),
                ("written_dimension", models.CharField(blank=True, max_length=255)),
                ("foliation_type", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "manuscript",
                "verbose_name_plural": "Manuscripts",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.CreateModel(
            name="ManuscriptCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "manuscript condition",
                "verbose_name_plural": "manuscript conditions",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="ManuscriptPartType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "manuscript part type ",
                "verbose_name_plural": "manuscript part types",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("forename", models.CharField(blank=True, default="")),
                ("surname", models.CharField(blank=True, default="")),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("date_of_death", models.DateField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("alternative_names", models.TextField(blank=True)),
                ("name_in_arabic", models.CharField(max_length=255)),
                ("laqab_kunya", models.CharField(max_length=255)),
                ("fathers_name", models.CharField(max_length=255)),
                ("grandfathers_name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("any", "any"),
                        ],
                        max_length=6,
                    ),
                ),
            ],
            options={
                "verbose_name": "person",
                "verbose_name_plural": "Persons",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.CreateModel(
            name="PlaceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "place type",
                "verbose_name_plural": "Place types",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="PrincipalRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "principal role",
                "verbose_name_plural": "Principal roles",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="Profession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "principal role",
                "verbose_name_plural": "Principal roles",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="SubjectHeading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "subject heading",
                "verbose_name_plural": "Subject headings",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="Title",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("abbreviation", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "principal role",
                "verbose_name_plural": "Principal roles",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="VersionExpression",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("title", models.CharField(max_length=255)),
                ("locus", models.CharField(blank=True, max_length=255)),
                ("script_title", models.CharField(blank=True, max_length=255)),
                ("script_body", models.CharField(blank=True, max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="VersionManuscript",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("identifier", models.CharField(max_length=255)),
                ("extent", models.CharField(blank=True, max_length=255)),
                ("leaf_dimension", models.CharField(blank=True, max_length=255)),
                ("written_dimension", models.CharField(blank=True, max_length=255)),
                ("foliation_type", models.CharField(blank=True, max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="VersionPerson",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("forename", models.CharField(blank=True, default="")),
                ("surname", models.CharField(blank=True, default="")),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("date_of_death", models.DateField(blank=True, null=True)),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("alternative_names", models.TextField(blank=True)),
                ("name_in_arabic", models.CharField(max_length=255)),
                ("laqab_kunya", models.CharField(max_length=255)),
                ("fathers_name", models.CharField(max_length=255)),
                ("grandfathers_name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("any", "any"),
                        ],
                        max_length=6,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "principal_role",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.principalrole",
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="VersionWork",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="WorkType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "work type",
                "verbose_name_plural": "Work types",
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name="Work",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apis_ontology.worktype",
                    ),
                ),
                (
                    "subject_heading",
                    models.ManyToManyField(
                        blank=True, to="apis_ontology.subjectheading"
                    ),
                ),
            ],
            options={
                "verbose_name": "work",
                "verbose_name_plural": "Works",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.CreateModel(
            name="VersionWork_subject_heading",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("m2m_history_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "history",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apis_ontology.versionwork",
                    ),
                ),
                (
                    "subjectheading",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.subjectheading",
                    ),
                ),
                (
                    "work",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.work",
                    ),
                ),
            ],
            options={
                "verbose_name": "VersionWork_subject_heading",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name="versionwork",
            name="kind",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="apis_ontology.worktype",
            ),
        ),
        migrations.AddField(
            model_name="versionwork",
            name="self_contenttype",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.CreateModel(
            name="VersionPlace",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("label", models.CharField(blank=True, default="")),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.placetype",
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="VersionPerson_title",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("m2m_history_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "history",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apis_ontology.versionperson",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.person",
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.title",
                    ),
                ),
            ],
            options={
                "verbose_name": "VersionPerson_title",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="VersionPerson_profession",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("m2m_history_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "history",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apis_ontology.versionperson",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.person",
                    ),
                ),
                (
                    "profession",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.profession",
                    ),
                ),
            ],
            options={
                "verbose_name": "VersionPerson_profession",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="VersionManuscriptPart",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("identifier", models.CharField(max_length=255)),
                ("locus", models.CharField(blank=True, max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.manuscriptparttype",
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="VersionManuscript_condition",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("m2m_history_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "history",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apis_ontology.versionmanuscript",
                    ),
                ),
                (
                    "manuscript",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.manuscript",
                    ),
                ),
                (
                    "manuscriptcondition",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.manuscriptcondition",
                    ),
                ),
            ],
            options={
                "verbose_name": "VersionManuscript_condition",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="VersionInstitution",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.institutiontype",
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="VersionExpression_language",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("m2m_history_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "expression",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.expression",
                    ),
                ),
                (
                    "history",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="apis_ontology.versionexpression",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace="",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.language",
                    ),
                ),
            ],
            options={
                "verbose_name": "VersionExpression_language",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="VersionEvent",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.eventtype",
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("label", models.CharField(blank=True, default="")),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apis_ontology.placetype",
                    ),
                ),
            ],
            options={
                "verbose_name": "place",
                "verbose_name_plural": "Places",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.AddField(
            model_name="person",
            name="principal_role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="apis_ontology.principalrole",
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="profession",
            field=models.ManyToManyField(blank=True, to="apis_ontology.profession"),
        ),
        migrations.AddField(
            model_name="person",
            name="title",
            field=models.ManyToManyField(blank=True, to="apis_ontology.title"),
        ),
        migrations.CreateModel(
            name="ManuscriptPart",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("identifier", models.CharField(max_length=255)),
                ("locus", models.CharField(blank=True, max_length=255)),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apis_ontology.manuscriptparttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "manuscript part",
                "verbose_name_plural": "Manuscript parts",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.AddField(
            model_name="manuscript",
            name="condition",
            field=models.ManyToManyField(
                blank=True, to="apis_ontology.manuscriptcondition"
            ),
        ),
        migrations.CreateModel(
            name="Institution",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apis_ontology.institutiontype",
                    ),
                ),
            ],
            options={
                "verbose_name": "institution",
                "verbose_name_plural": "Institutions",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
        migrations.AddField(
            model_name="expression",
            name="language",
            field=models.ManyToManyField(blank=True, to="apis_ontology.language"),
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "rootobject_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apis_metainfo.rootobject",
                    ),
                ),
                ("start_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "start_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("end_date", models.DateField(blank=True, editable=False, null=True)),
                (
                    "end_start_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "end_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "start_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Start"
                    ),
                ),
                (
                    "end_date_written",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="End"
                    ),
                ),
                (
                    "review",
                    models.BooleanField(
                        default=False,
                        help_text="Should be set to True, if the data record holds up quality standards.",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                ("published", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=100)),
                ("references", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "kind",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="apis_ontology.eventtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "event",
                "verbose_name_plural": "Events",
            },
            bases=("apis_metainfo.rootobject", models.Model),
        ),
    ]
